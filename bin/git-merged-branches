#!/usr/bin/env bash

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -eo pipefail
IFS=$'\n\t'

main() {

    local merged="--merged"
    local remote_arg=""
    local apply=false
    local commit='origin/develop'

	while true;
    do
      case "$1" in
        -u | --unmerged ) merged="--no-merged"; shift ;;
        -r | --remote ) remote_arg="-r"; shift ;;
        -a | --apply ) apply=true; shift ;;
        -c | --commit ) commit="$2"; shift 2 ;;
        -h | --help ) print_usage; exit 1 ;;
        -- ) shift; break ;;
        * ) break ;;
      esac
    done

    branches=$(git branch $remote_arg $merged "$commit" | grep -v "\*" | xargs -n 1)

    s=""
    remote=$(git remote)
    for branch in $branches; do
        if [ -z "$remote_arg" ]; then
            if $apply; then
                git branch -d $branch
            else
                s="$s"$"git branch -d $branch"$'\n'
            fi
        else
            s="$s"$"git push $remote :$branch"$'\n'
        fi
    done
    echo "$s" | sort
}

print_usage() {
cat <<EOF
Usage: $0 [options] [extra args to pass]

  This program outputs the statements you'd need to run to delete remote branches, allowing you to
  specify if you only show merged or unmerged branches

  Options:

    -u, --unmerged  Show unmerged branches
    -c, --commit    Specify the commit/tip to compare with (default: [$commit])
    -h, --help      Display this help

EOF
}

main "$@"

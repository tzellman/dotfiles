#!/bin/bash
# NOTE: This requires GNU getopt.  On Mac OS X and FreeBSD, you have to install this separately; see below.

# make sure to apt-get install libaio1

TEMP=`getopt -o d:m:fp: --long pass:,force,dir:,mem: -n '$0' -- "$@"`
USAGE="Usage: $0 [-p password] [-d dir]"

if [ $? != 0 ] ; then echo "Terminating...\n$USAGE" >&2 ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

baseDir=/data/mysql
force=false
mem=10
pass=

ARGS=
while true; do
  case "$1" in
    -f | --force ) force=true; shift ;;
    -d | --dir ) baseDir="$2"; shift 2 ;;
    -m | --mem ) mem="$2"; shift 2 ;;
    -p | --pass ) pass="$2"; shift 2 ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

if [ -z "$pass" ]; then echo "$USAGE" >&2 ; exit 1; fi

cnffile=/etc/my.cnf
svfile=/etc/supervisor/conf.d/mysql.conf

if ($force); then
    rm -rf $baseDir || true;
    rm -f $cnffile || true;
    rm -f $svfile || true;
fi

mkdir -p $baseDir
cd $baseDir
rm -rf /etc/mysql || true

if ! ls mysql-*; then

# scrape the latest version
v=$(curl -s 'https://dev.mysql.com/downloads/' | grep "Current Generally Available Release" | head -n 1 | awk -F: '{print $2}' | awk -F\) '{print $1}' | cut -f 2 -d ' ')
minor=$(echo $v | awk -F. '{print $1"."$2}')
echo $minor
wget http://cdn.mysql.com/Downloads/MySQL-$minor/mysql-$v-linux-glibc2.12-x86_64.tar.gz
tar zxf mysql-*tar.gz
rm mysql-*tar.gz

mysqldir=$(pwd)
logdir=$(pwd)/logs
datadir=$(pwd)/data
basedir=`cd mysql-*;pwd`


if [ ! -e $cnffile ]; then
cat <<EOF > $cnffile
[client]
port		= 3306
socket		= $mysqldir/mysqld.sock
default-character-set = utf8

[mysqld_safe]
socket          = $mysqldir/mysqld.sock
nice            = 0

[mysqld]
user            = root
socket          = $mysqldir/mysqld.sock
port            = 3306
tmpdir          = /tmp
basedir         = $basedir
datadir         = $datadir
log_error       = $logdir/error.log
character_set_server=utf8
collation_server=utf8_unicode_ci
default_time_zone=+0:00
#skip-character-set-client-handshake

default-storage-engine=INNODB
skip-external-locking
bind-address            = 0.0.0.0
max_allowed_packet      = 16M
thread_stack            = 192K
thread_cache_size       = 8
query_cache_limit       = 1M
query_cache_size        = 32M
expire_logs_days        = 10
innodb_buffer_pool_size = ${mem}G
innodb_log_buffer_size = 128M
innodb_flush_log_at_trx_commit = 1
innodb_thread_concurrency = 16
innodb_file_per_table=1
innodb_log_file_size=128M

tmp_table_size=16M
max_heap_table_size=16M
read_buffer_size=128M
sort_buffer_size=32M


[mysqldump]
quick
quote-names
max_allowed_packet      = 16M

[mysql]

[isamchk]
key_buffer              = 16M
EOF
fi

update-alternatives --remove-all mysql
update-alternatives --remove-all mysqldump
update-alternatives --remove-all mysqladmin
update-alternatives --install /usr/bin/mysql mysql $basedir/bin/mysql 1
update-alternatives --install /usr/bin/mysqladmin mysqladmin $basedir/bin/mysqladmin 1
update-alternatives --install /usr/bin/mysqldump mysqldump $basedir/bin/mysqldump 1
update-alternatives --install /usr/bin/mysqladmin mysqladmin $basedir/bin/mysqladmin 1

if [ ! -e $datadir ]; then
    echo "Installing DB"
    mkdir $datadir
    cd $basedir
    $basedir/bin/mysqld --initialize-insecure
fi

mkdir -p $logdir

if [ ! -e $svfile ]; then
cat <<EOF > $svfile
[program:mysql]
directory=/data/mysql/
command=$basedir/bin/mysqld --defaults-file=$cnffile
process_name=%(program_name)s
EOF
fi

supervisorctl reread
supervisorctl update

sleep 20

$basedir/bin/mysqladmin --defaults-file=$cnffile -u root password "$pass"

numNulls=$(mysql -u root --password="$pass" <<EOF | grep NULL | wc -l
select convert_tz('2014-1-1', '+0:00', 'America/Detroit');
EOF
)
if ! test "$numNulls" = 0
then
    $basedir/bin/mysql_tzinfo_to_sql /usr/share/zoneinfo \
        | mysql -u root mysql --password="$pass"
fi
fi
